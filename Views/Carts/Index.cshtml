@model IEnumerable<BookStore.Models.Cart>

@{
    ViewData["Title"] = "Index";
}

<h1>My Cart </h1>
@if(Model.Count()>0)
{
	double Total = 0;
	int Stt = 1;
    <table class="table">
    <thead>
        <tr>
            <th>
				Numeric 
			</th>
            <th class="col-sm-2">
                @Html.DisplayNameFor(model => model.BookIsbn)
            </th>
            <th class="col-sm-2">
                @Html.DisplayNameFor(model => model.User.Email)
            </th>
            <th class="col-sm-2">
                @Html.DisplayNameFor(model => model.Book.Title)
            </th>
            <th class="col-sm-2">
                @Html.DisplayNameFor(model => model.Book.Pages)
            </th>
            <th class="col-sm-2">
                @Html.DisplayNameFor(model => model.Book.Author)
            </th>
            <th class="col-sm-2">
                @Html.DisplayNameFor(model => model.Book.Category)
            </th>
            <th class="col-sm-2">
                @Html.DisplayNameFor(model => model.Book.Price)
            </th>
            <th class="col-sm-2">
               Total
            </th>
            <th class="col-sm-2">
                @Html.DisplayNameFor(model => model.Book.ImgUrl)
            </th>
            <th class="col-sm-2">
                Quantity
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            double priceItem = item.Book.Price * item.Quantity;
			Total = priceItem + Total;
            <tr>
                <td>
					@(Stt++)
				</td>
                <td>
                    @Html.DisplayFor(modelItem => item.BookIsbn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem =>item.Book.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem =>item.Book.Pages)
                </td>
                <td>
                    @Html.DisplayFor(modelItem =>item.Book.Author)
                </td>
                <td>
                    @Html.DisplayFor(modelItem =>item.Book.Category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem =>item.Book.Price) USD
                </td>
                <td class ="total">
                    @(Math.Round((item.Book.Price) * (@item.Quantity),1)) USD
                </td>
                <td>
                    <img src="@item.Book.ImgUrl" height="150" />
                </td>
                <td>
                 <a asp-action="removeItem" asp-route-isbn="@item.BookIsbn" class="btn btn-primary">-</a> 
				@Html.DisplayFor(modelItem => item.Quantity) 
				<a asp-action="Increase" asp-route-isbn="@item.BookIsbn" class="btn btn-primary">+</a>
            	  <a asp-action="Remove" asp-route-isbn="@item.BookIsbn" class="btn btn-primary">Remove</a>	
                </td>
            </tr>     
        }
        <tr>
			<td></td>
			<td></td>
            <td></td>
            <td></td>
            <td></td>
			<td></td>
            <td></td>
			<td></td>
			<td></td>
			<td></td>
			<td>Total: @(Math.Round(Total,1))</td>
		</tr>
	</tbody>
	</table>
}
else
{
	<p class="alert alert-danger">Cart Successfull</p>
}

        <tbody>

<div style="display:flex;text-align:center;justify-content:center">
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            @for (var i = 0; i < @ViewBag.numberOfPages; i++)
            {
                var style = (ViewBag.currentPage == @i) ? "active" : "";
                <li class="page-item @style">
                    <a class="page-link" asp-route-id="@i">@(i+1)</a>
                </li>
            }
        </ul>
    </nav>
</div>
<a asp-Controller="Books" asp-action="Checkout">order</a>
